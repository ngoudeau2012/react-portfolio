{"version":3,"sources":["assets/images/headshot1.png","assets/images/resume.pdf","components/ThemeContext/index.js","components/DarkModeButton/index.js","components/Navbar/index.js","components/Container/index.js","components/AboutMe/index.js","components/ProjectCard/index.js","components/Skills/index.js","components/ProjectPortfolio/index.js","components/Wallpaper/index.js","components/footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ThemeContext","React","createContext","ThemeUpdateContext","useTheme","useContext","ThemeProvider","children","useState","darkTheme","setdarkTheme","Provider","value","prevDarkTheme","DarkMode","toggleTheme","themeClasses","className","onClick","Nav","themeClass","console","log","role","aria-label","src","headshot","aria-expanded","data-target","aria-hidden","id","Container","props","fluid","AboutMe","href","Resume","target","ProjectCard","projectsArr","Projects","class","map","project","Image","Name","Description","gitHubRepo","deployedApp","Skills","ProjectPortfolio","Wallpaper","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.55a46479.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/headshot1.5f577029.png\";","module.exports = __webpack_public_path__ + \"static/media/resume.9e7fb9b5.pdf\";","import React, { useContext, useState} from \"react\"\n\nconst ThemeContext = React.createContext()\nconst ThemeUpdateContext = React.createContext()\n\nexport function useTheme(){\n    return useContext(ThemeContext)\n}\n\nexport function useThemeUpdate(){\n    return useContext(ThemeUpdateContext)\n}\n\nexport function ThemeProvider({children}) {\n    const [darkTheme, setdarkTheme] = useState(false)\n\n    function toggleTheme(){\n        setdarkTheme(prevDarkTheme => !prevDarkTheme)\n    }\n\n    return(\n        <ThemeContext.Provider value={darkTheme}>\n            <ThemeUpdateContext.Provider value={toggleTheme}>\n                {children}\n            </ThemeUpdateContext.Provider>\n        </ThemeContext.Provider>\n    )\n}","import React from \"react\"\nimport { ThemeProvider, useTheme, useThemeUpdate } from \"../ThemeContext\"\nimport \"./style.css\"\n\nfunction DarkMode(){\n    const darkTheme = useTheme()\n    const toggleTheme = useThemeUpdate()\n\n    const themeClasses = darkTheme ? \"light-mode-button\" : \"dark-mode-button\"\n\n    return(\n        <div className={themeClasses} onClick={toggleTheme}>\n        </div>\n    )\n    \n}\n\nexport default DarkMode","import React from \"react\";\nimport \"./Navbar.css\";\nimport DarkMode from \"../DarkModeButton\";\nimport resume from \"../../assets/images/resume.pdf\";\nimport { useTheme } from \"../ThemeContext\";\nimport headshot from \"../../assets/images/headshot1.png\"\n\nfunction Nav() {\n  const darkTheme = useTheme();\n\n  const themeClass = darkTheme ? \"navbar\" : \"dark navbar\";\n\n  console.log(darkTheme);\n  return (\n    <div>\n      <nav\n        className={themeClass}\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"navbar-brand\">\n          {/* <h1 className=\"navbarName\">NG</h1> */}\n          <div className=\"image-crop\">\n                <img src={headshot}/>\n            </div>\n        \n          <a\n            role=\"button\"\n            className=\"navbar-burger burger\"\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n            data-target=\"navbarBasicExample\"\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n        </div>\n\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              <div className=\"buttons\">\n                <DarkMode />\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n      <div className=\"colored-banner\">\n\n      </div>\n    </div>\n  );\n}\nexport default Nav;\n","import React from \"react\";\nimport \"./style.css\"\n\nfunction Container(props) {\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`} {...props} />;\n}\n\nexport default Container;","import React from \"react\";\nimport headshot from \"../../assets/images/headshot1.png\"\nimport \"./style.css\"\nimport { useTheme } from \"../ThemeContext\";\nimport Resume from \"../../assets/images/resume.pdf\"\n\nfunction AboutMe() {\n\n  const darkTheme = useTheme();\n\n  const themeClass = darkTheme ? \"about-me-section\" : \"dark about-me-section\";\n\n\n  return (\n    <div>\n        <div className={themeClass}>\n            \n            <div className=\"text-section\">\n              <div className=\"name\">\n                Hi, I'm Nick\n              </div>\n              <div className=\"intro-text\">\n                Thank you for taking the time to view my information. In 2020, I ventured down a new career path after leaving a Sales Management position. I jumped into web development as a way to express my creative side and quickly fell in love. Since then, I've become certified in Full Stack Web Devlopement and now lead develpoment on an internal projet under Amazon's Global Real Estate devision. \n              </div>\n              <div className=\"intro-text\">\n                I use this space to showcase my work, any professional work will be stripped of content to preserve Amazon's Internal Privacy Policy.\n              </div>\n            </div>\n            <div className=\"image-div\">\n                <img src={headshot}/>\n            </div>\n            <div className=\"link-buttons\">\n                <a href=\"\">LinkedIn</a>\n                <a href=\"\">GitHub</a>\n                <a href={Resume} target=\"_blank\">Resume</a>\n                <a href=\"\">Email</a>\n            </div>\n        </div>\n       \n    </div>\n  );\n}\n\nexport default AboutMe;\n","import React from \"react\";\nimport * as Projects from \"../../utils/projects.json\";\nimport { useTheme } from \"../ThemeContext\";\nimport \"./style.css\"\n\nfunction ProjectCard() {\n\n  const darkTheme = useTheme();\n\n  const themeClass = darkTheme ? \"project-card\" : \"dark project-card\";\n\n  const projectsArr = Projects.default;\n  return (\n    <div class=\"flex\">\n      {projectsArr.map((project) => (\n        <div className={themeClass}>\n          <div className=\"left-side\">\n              <img src={project.Image}/>\n          </div>\n          <div className=\"right-side\">\n            <div className=\"text-section\">\n            <div className=\"project-name\">{project.Name}</div>\n            <div>{project.Description}</div>\n            </div>\n          <div className=\"link-buttons\">\n            <a href={project.gitHubRepo}>Repo</a>\n            <a href={project.deployedApp}>LinktoPage</a>\n          </div>\n          </div>\n          \n        </div>\n\n        // <div className=\"card is-desktop\">\n        //   <div className=\"card-image\">\n        //     <figure className=\"image is-16by9\">\n        //       <img\n        //         className=\"has-ratio\"\n        //         width=\"250\"\n        //         src={project.Image}\n        //         alt=\"Placeholder image\"\n        //       />\n        //     </figure>\n        //   </div>\n        //   <div className=\"card-content\">\n        //     <div className=\"media\">\n        //       <div className=\"media-content\">\n        // <p className=\"title is-5\">{project.Name}</p>\n        //       </div>\n        //     </div>\n\n        //     <div className=\"content\">\n        //       {project.Description}\n        //       <br />\n        //     </div>\n        //     <footer className=\"card-footer\">\n        //       <a href={project.gitHubRepo} className=\"card-footer-item\">\n        //         GitHub Repo\n        //       </a>\n        //       <a href={project.deployedApp} className=\"card-footer-item\">\n        //         Deployed App\n        //       </a>\n        //     </footer>\n        //   </div>\n        // </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ProjectCard;\n","import React from \"react\";\nimport ProjectCard from \"../ProjectCard\";\nimport \"./style.css\";\nimport DarkModeButton from \"../DarkModeButton\"\nimport DarkMode from \"../DarkModeButton\";\nimport {useTheme} from \"../ThemeContext\"\n\nfunction Skills() {\n\n  const darkTheme = useTheme();\n\n  const themeClass = darkTheme ? \"skills-section\" : \"dark skills-section\";\n\n  return (\n    <div class={themeClass}>\n      <div className=\"header\">\n        <h1 className=\"sectionHeader\">Skills</h1>\n      </div>\n      <hr />\n      <div class=\"flex\">\n        <div className=\"skills card\">\n          <h1 className=\"sectionHeader\">Front-end</h1>\n          <ul>\n            <li>React</li>\n            <li>HTML</li>\n            <li>CSS</li>\n            <li>JavaScript</li>\n            <li>Flexbox</li>\n            <li>Flexgrid</li>\n            <li>XWiki</li>\n          </ul>\n        </div>\n        <div className=\"skills card\">\n          <h1 className=\"sectionHeader\">Back-end</h1>\n          <ul>\n            <li>Node.js</li>\n            <li>Express.js</li>\n            <li>MongoDB</li>\n            <li>Mongoose</li>\n            <li>MySQL</li>\n            <li>Sequelize</li>\n            <li>AJAX/AXIOS</li>\n            <li>Handlebars</li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"header\">\n                <h1 className=\"sectionHeader\">Experience</h1>\n            </div>\n            <hr/>\n            <div className=\"experience card\">\n                <div className=\"sectionHeader\">Amazon <span className=\"job-title\"></span></div>\n                <div className=\"job-title\">Lead Developer | GREF Hub Online</div>\n                <div className=\"discription\">Lead developer for the GREF Hub Online platform </div>\n                <ul>\n                  <li>\n                    \n                  </li>\n                    <li>Led development of component and template galleries allowing for agile development and migration of wiki pages to meet\nthe new brand guidelines of GREF.</li>\n                </ul>\n            </div>\n    </div>\n  );\n}\n\nexport default Skills;\n","import React from \"react\";\nimport ProjectCard from \"../ProjectCard\"\nimport Skills from \"../Skills\"\nimport {useTheme} from \"../ThemeContext\"\nimport \"./style.css\"\n\nfunction ProjectPortfolio(){\n\n    const darkTheme = useTheme();\n\n    const themeClass = darkTheme ? \"portfolio-section\" : \"dark portfolio-section\";\n\n    return(\n        <div  className=\"flex\">\n            <div className={themeClass}>\n                <div className=\"header\">\n                    <h1 className=\"sectionHeader\">Project Portfolio</h1>\n                </div>\n                <hr/>\n                <div>\n                    <ProjectCard />\n                </div>\n            </div>\n            <Skills />\n            \n           \n        \n        </div>\n    )\n}\nexport default ProjectPortfolio;","import React, { Children } from \"react\"\r\nimport \"./style.css\"\r\nimport {useTheme} from \"../ThemeContext\"\r\n\r\nfunction Wallpaper(props){\r\n    const darkTheme = useTheme()\r\n\r\n    const themeClass = darkTheme ? \"background\" : \"dark background\"\r\n\r\n    return(\r\n        <div className={themeClass}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wallpaper","import React from \"react\";\r\nimport {useTheme} from \"../ThemeContext\"\r\nimport \"./style.css\"\r\n\r\nfunction Footer(){\r\n    const darkTheme = useTheme()\r\n\r\n    const themeClass = darkTheme ? \"footer\" : \"dark footer\"\r\n\r\n    return (\r\n        <div className={themeClass}>\r\n             <div>\r\n                 Designed and Developed by <span className=\"block\">Nick Goudeau</span>\r\n                </div>\r\n             <div className=\"flex\">\r\n                <a href=\"https://www.linkedin.com/in/nicholasgoudeau/\" target=\"_blank\"><i class=\"fab fa-linkedin\"></i></a>\r\n                <a href=\"https://github.com/ngoudeau2012\" target=\"_blank\"><i class=\"fab fa-github\"></i></a>\r\n                <a href=\"mailto:ngoudeau2012@gmail.com\" target=\"_blank\"><i class=\"fas fa-envelope\"></i></a>\r\n             </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport Nav from './components/Navbar'\nimport Container from './components/Container'\nimport AboutMe from './components/AboutMe'\nimport ProjectPortfolio from './components/ProjectPortfolio'\nimport Wallpaper from \"./components/Wallpaper\"\nimport Footer from \"./components/footer\"\nimport { ThemeProvider } from \"./components/ThemeContext\"\n\nfunction App() {\n\n  return (\n    \n      <ThemeProvider>\n        <Wallpaper>\n          <Nav />\n            <Container>\n              <AboutMe />\n              <ProjectPortfolio />\n            </Container>\n        </Wallpaper>\n        <Footer />\n      </ThemeProvider>\n   \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}